class SetupScorePresenter(private var ssv: SetupScoreMVP.View) : SetupScoreMVP.Presenter {

    override fun saveUserData(maths: String, russian: String, physics: String,
                              computerScience: String, socialScience: String) {
        val myApplication = MyApplication.instance

        myApplication.saveScore(Score(returnInt(maths), returnInt(russian), checkTextForBeingEmpty(physics),
                checkTextForBeingEmpty(computerScience), checkTextForBeingEmpty(socialScience)))
    }

    override fun checkTextForBeingEmpty(text: String): Int {
        return if (text.isEmpty()) {
            0
        } else text.toInt()
    }

    override fun addFieldsListeners() {
        ssv.setFieldsListeners()
    }

    override fun checkMaths(math_passing: Int, score_limit: Int) {
        ssv.mathsIsValid(math_passing, score_limit)
    }
    override fun checkRussian(rus_passing: Int, score_limit: Int) {
        ssv.russianIsValid(rus_passing, score_limit)
    }
    override fun checkPhysics(phys_passing: Int, score_limit: Int) {
        ssv.physicsIsValid(phys_passing, score_limit)
    }
    override fun checkComputerScience(comp_passing: Int, score_limit: Int) {
        ssv.computerScienceIsValid(comp_passing, score_limit)
    }
    override fun checkSocialScience(soc_passing: Int, score_limit: Int) {
        ssv.socialScienceIsValid(soc_passing, score_limit)
    }

    override fun saveAdditionalScore(additionalScore: Int) {
        val myApplication = MyApplication.instance

        myApplication.saveAdditionalScore(additionalScore)
    }
}
        val divideSpecialties = Thread {
            val specialties = grabSpecialties("specialties.csv")

            val bachelorsAndSpecialists = divideSpecialtiesByEducationLevel(specialties)
            //bachelorsAndSpecialists?.let { divideSpecialtiesByFaculty(it) }
            divideSpecialtiesByFaculty(bachelorsAndSpecialists)
        }
        val divideStudents = Thread {
            val students = grabStudents("abiturs.csv")
            divideStudentsByAdmissions(students)
        }

        divideSpecialties.start()
        divideStudents.start()

        divideSpecialties.join()
        divideStudents.join()

        /*val divideSpecialties = GlobalScope.async {
            val specialties = grabSpecialties("specialties.csv")
            divideSpecialtiesByFaculty(specialties)
        }
        val divideStudents = GlobalScope.async {
            val students = grabStudents("abiturs.csv")
            divideStudentsByAdmissions(students)
        }

        GlobalScope.launch {
            activity?.runOnUiThread {
                val specialties = grabSpecialties("specialties.csv")
                val students = grabStudents("abiturs.csv")
            }

            divideSpecialties.await()
            divideStudents.await()
        }*/

        println("Первый этап завершён")